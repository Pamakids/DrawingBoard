<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" width="310" height="322"
		 xmlns:local="*"
		 creationComplete="group1_creationCompleteHandler(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 enterFrame="group1_enterFrameHandler(event)">
	<fx:Script>
		<![CDATA[

			import com.greensock.TweenLite;

			import mx.core.UIComponent;
			import mx.events.FlexEvent;

			import assets.player.PlayerAssets;

			import vo.VO;

			private var rec:RecordAudio;

			protected function close(event:MouseEvent):void
			{
//				if (tmpUrl)
//				{
//					var f:File=new File(tmpUrl);
//					f.copyTo(File.applicationStorageDirectory.resolvePath(recordUrl), true);
//					var f2:File=File.applicationStorageDirectory.resolvePath(recordUrl);
//					trace(f.nativePath,f.size)
//					trace(f2.nativePath,f2.size)
//				}
				dispatchEvent(new Event("close"));
			}

			protected function pressDown(event:MouseEvent):void
			{
				pressBtn.source=PlayerAssets.btn_pressToRecord_B;
				stage.addEventListener(MouseEvent.MOUSE_UP, onRelease);

				rec=RecordAudio.instance;
				rec.startRecord(VO.AUDIO_NAME2);

				recording=true;
			}

			private var mc:MovieClip;
			private var recording:Boolean;
			private var count:int;

			protected function onRelease(event:MouseEvent):void
			{
				stage.removeEventListener(MouseEvent.MOUSE_UP, onRelease);
				pressBtn.source=PlayerAssets.btn_pressToRecord;
				pressBtn.mouseEnabled=false;

				mc.gotoAndStop(1);
				recording=false;
				count=0;

				TweenLite.delayedCall(.1, rec.stopRecord, [recSaved]);
			}

			private function recSaved(u:String):void
			{
				TweenLite.delayedCall(.1, rec.toAmr, [transComplete]);
			}

			private function transComplete(u:String):void
			{
				tmpUrl=u;
				var f:File=new File(tmpUrl);
				f.copyTo(File.applicationStorageDirectory.resolvePath(recordUrl), true);
				var f2:File=File.applicationStorageDirectory.resolvePath(recordUrl);
				trace(f.nativePath,f.size)
				trace(f2.nativePath,f2.size)
				pressBtn.mouseEnabled=true;
				pressBtn.visible=false;
			}

			private var tmpUrl:String;

			protected function reRecord(event:MouseEvent):void
			{
//				tmpUrl="";
				pressBtn.visible=true;
				pressBtn.source=PlayerAssets.btn_pressToRecord;
			}

			protected function playRecord(event:MouseEvent):void
			{
				var f2:File=File.applicationStorageDirectory.resolvePath(recordUrl);
//				trace(f.nativePath,f.size)
				trace(f2.nativePath,f2.size)
				rec.playAmr(f2.nativePath);
//				rec.playAmr(tmpUrl);
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				mc=new mc_recordd();
				mcHolder.addChild(mc);
				mc.stop();
				total=mc.totalFrames;
				recording=false;
				count=0;
			}

			private var total:int;
			private var rate:int=8;
			public var recordUrl:String;

			protected function group1_enterFrameHandler(event:Event):void
			{
				if (mc && recording)
				{
					var frame:int=(count / rate) % total + 1;
					mc.gotoAndStop(frame);
					count++;
				}
			}

		]]>
	</fx:Script>
	<s:Image source="{PlayerAssets.recordBg}"/>
	<s:Image source="@Embed('assets/global/close.png')" click="close(event)"
			 top="17" left="255"/>
	<!--<s:Group x="155" y="152" id="circle">
		 <s:Image source="@Embed('assets/player/btn/recordCircle.png')" x="-42"
		 y="-42"/>
		 </s:Group>
		 <s:Image left="138" top="128"
		 source="@Embed('assets/player/btn/recordMic.png')"/>-->

	<s:Image id="pressBtn" source="{PlayerAssets.btn_pressToRecord}" left="31"
			 top="242" mouseDown="pressDown(event)"/>

	<mx:UIComponent id="mcHolder" top="119" left="113"/>

	<s:HGroup visible="{!pressBtn.visible}" left="26" top="238" gap="7">
		<s:Image source="{PlayerAssets.btn_reRecord}" click="reRecord(event)"/>
		<s:Image source="{PlayerAssets.btn_playRecord}"
				 click="playRecord(event)"/>
	</s:HGroup>
</s:Group>
