<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" width="1024" height="768"
		 xmlns:drawing="drawing.*" xmlns:draw="views.draw.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="group1_creationCompleteHandler(event)"
		 xmlns:player="views.player.*">

	<fx:Declarations>
		<s:DateTimeFormatter id="df" dateTimePattern="yyyyMMddHHmmss/"/>
	</fx:Declarations>

	<fx:Script>
		<![CDATA[

			import com.greensock.TweenLite;

			import mx.events.FlexEvent;

			import assets.game.GameAssets;

			import controllers.DBPopUp;

			import drawing.DrawingMain;

			import events.BrushEvent;
			import events.ColorEvent;
			import events.ReplayEvent;

			import models.PaintData;
			import models.ThemeVo;

			import proxy.FileProxy;

			public function dispose():void
			{
				onSndComplete();
				if (dm)
				{
					dm.dispose();
					dbLayer.removeChild(dm);
				}
				removeAllElements();
				dm=null;

				if (controlPad)
				{
					controlPad.removeEventListener("changeToTexture", onTexture);
					controlPad.removeEventListener("changeToDraw", onDraw);
					controlPad.removeEventListener("exitDraw", onExit);
					controlPad.removeEventListener("clearDrawBorad", onClear);
					controlPad.removeEventListener("saveDraw", onSave);
					controlPad.removeEventListener(ColorEvent.EVENT_ID, onColor);
					controlPad.removeEventListener(BrushEvent.EVENT_ID, onBrush);
				}
				controlPad=null;
			}

			public function initData(vo:ThemeVo):void
			{
				paintData=new PaintData();
				paintData.theme=vo;
				bg.source=vo.dataUrl;
			}

			private var dm:DrawingMain;

			private var fproxy:FileProxy;

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				fproxy=new FileProxy();
				fproxy.path=df.format(new Date());

				dm=new DrawingMain();
				dbLayer.addChild(dm);
				controlPad.layer=textureLayer;

				controlPad.addEventListener("changeToTexture", onTexture);
				controlPad.addEventListener("changeToDraw", onDraw);
				controlPad.addEventListener("exitDraw", onExit);
				controlPad.addEventListener("clearDrawBorad", onClear);
				controlPad.addEventListener("saveDraw", onSave);
				controlPad.addEventListener(ColorEvent.EVENT_ID, onColor);
				controlPad.addEventListener(BrushEvent.EVENT_ID, onBrush);

				controlPad.crtBrushIndex=0;
//				controlPad.visible=false;

				this.mouseEnabled=this.mouseChildren=false;
				snd=new Sound(new URLRequest(paintData.theme.soundUrl));
				sc=snd.play();
				sc.addEventListener(Event.SOUND_COMPLETE, onSndComplete);

				mc=new mc_readyToDraw();
				mc.x=430;
				mc.y=474;

				mcHolder=new UIComponent();
				addElement(mcHolder);
				mcHolder.addChild(mc);
				mc.gotoAndPlay(1);
			}

			private var mcHolder:UIComponent;

			protected function onSndComplete(e:Event=null):void
			{
				if (controlPad)
				{
//					controlPad.visible=true;
					controlPad.playEnter();
				}
				this.mouseEnabled=this.mouseChildren=true;
				if (sc)
					sc.removeEventListener(Event.SOUND_COMPLETE, onSndComplete);
				sc=null;
				snd=null;

				if (mcHolder)
				{
					if (mc)
					{
						mc.stop();
						mcHolder.removeChild(mc);
					}
					removeElement(mcHolder);
				}
				mc=null;
				mcHolder=null;
			}

			protected function onTexture(event:Event):void
			{
				textureLayer.mouseChildren=textureLayer.mouseEnabled=true;
				dbLayer.mouseChildren=dbLayer.mouseEnabled=false;
				textureLayer.alpha=1;
			}

			protected function onDraw(event:Event):void
			{
				textureLayer.mouseChildren=textureLayer.mouseEnabled=false;
				dbLayer.mouseChildren=dbLayer.mouseEnabled=true;
				textureLayer.alpha=.3;
			}

			protected function onColor(event:ColorEvent):void
			{
				var color:uint=event.color;
				dm.controlColor(color);
			}

			protected function onBrush(e:BrushEvent):void
			{
				var brush:String=e.brush;
				dm.controlBtn(brush);
			}

			protected function onExit(event:Event):void
			{
				dispatchEvent(new Event("exitDraw"));
			}

			private var paintData:PaintData;

			private var snd:Sound;

			private var sc:SoundChannel;

			private var mc:MovieClip;

			protected function onClear(event:Event):void
			{
				if (dm)
				{
					dm.dispose();
					dbLayer.removeChild(dm);
				}
				dm=null;

				dm=new DrawingMain();
				dbLayer.addChild(dm);

				textureLayer.removeAllElements();
			}

			protected function onSave(event:Event):void
			{
				var bp:Bitmap=new GameAssets.game_saving();
				DBPopUp.addPopUp(bp);

				TweenLite.delayedCall(.5, function():void {
					onTexture(null);
					paintData.drawData=dm.reserveObject();
					paintData.textureData=controlPad.getTextureData();

					var thumb:BitmapData=new BitmapData(1024, 768);
					thumb.draw(drawBoard);
					fproxy.saveThumb(thumb);
					fproxy.saveConfig(paintData);

					dispose();

					dispatchEvent(new ReplayEvent(paintData));

					DBPopUp.removePopUp(bp);
				});
			}

			protected function drawBoard_clickHandler(event:MouseEvent):void
			{
//				replay.playBars();
			}

		]]>
	</fx:Script>
	<s:Group id="drawBoard" width="100%" height="100%"
			 click="drawBoard_clickHandler(event)">
		<s:Image id="bg"/>
		<mx:UIComponent id="dbLayer">
		</mx:UIComponent>
		<s:Group id="textureLayer" mouseEnabled="false" mouseChildren="false"
				 alpha=".3"/>
	</s:Group>
	<draw:DrawControlPad id="controlPad">
	</draw:DrawControlPad>

	<!--	<player:ReplayControlBar id="replay">

		 </player:ReplayControlBar>-->
</s:Group>
