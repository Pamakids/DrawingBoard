<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 creationComplete="group1_creationCompleteHandler(event)" width="686"
		 height="68">
	<fx:Script>
		<![CDATA[

			import com.pamakids.manager.LoadManager;
			import com.pamakids.models.ResultVO;
			import com.pamakids.utils.CloneUtil;

			import mx.events.FlexEvent;

			import controllers.API;
			import controllers.DBPopUp;

			import events.ReplayEvent;
			import events.UserItemEvent;

			import models.PaintData;
			import models.PaintVO;
			import models.PraiseVO;
			import models.UserVO;

			import proxy.FileProxy;

			import vo.VO;
			[Bindable]
			private var playTimes:String;
			[Bindable]
			private var likeTimes:String;

//			[Bindable]
//			private var praiseTimes:String;

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
			}

			private var pd:PaintData;

			protected function play_click(event:MouseEvent):void
			{
				mouseEnabled=mouseChildren=false;
				API.instance.addPaintPlayedCount(playCB, data._id);
				DBPopUp.addLoadingPopup("载入中,请稍等", loadingCB);
				var path:String;
				var url:String=data.data;

				var local:String=hostToLocal(url);
				url=data.dataUrl;
				LoadManager.instance.errorHandler=errorHander;
				LoadManager.instance.loadText(url, dataLoadComplete, local);
			}

			private function errorHander():void
			{
				DBPopUp.removeLoadingPopup(false);
			}

			private function playCB(o:ResultVO):void
			{
				dispatchEvent(new Event("refresh"));
			}

			private function loadingCB():void
			{
				dispatchEvent(new ReplayEvent(data.coverUrl, pd, false, cachedAudio,data._id));
			}

			private function dataLoadComplete(s:String):void
			{
				pd=FileProxy.parseConfig(s);
				if (data.audio)
				{
					var au:String=data.audioUrl;
					cachedAudio=hostToLocal(data.audio);
					LoadManager.instance.load(au, audioComplete, getPath(cachedAudio));
				}
				else
					DBPopUp.removeLoadingPopup();
			}

			private function getPath(u:String):String
			{
				var f:File=File.applicationStorageDirectory.resolvePath(u);
				return f.nativePath;
			}

			private var cachedAudio:String;

			private function audioComplete(o:Object):void
			{
				DBPopUp.removeLoadingPopup();
			}

			public static function hostToLocal(url:String):String
			{
				return VO.CACHE_PATH + url;
			}

			private var data:PaintVO;
			[Bindable]
			private var liked:Boolean;

//			[Bindable]
//			private var praised:Boolean;

			public function initData(o:PaintVO):void
			{
				mouseEnabled=mouseChildren=true;
				data=o;

				likeTimes=data.agrees.toString();
				if (data.agrees > 99)
					likeTimes='99+';
				else if (isNaN(data.agrees))
					likeTimes='0';
//				praiseTimes=o.favorites.toString();
//				if (o.favorites > 99)
//					praiseTimes='99+';
//				else if (isNaN(o.favorites))
//					praiseTimes='0';

				playTimes=data.plays.toString();
				if (data.plays > 99)
					playTimes='99+';
				else if (isNaN(data.plays))
					playTimes='0';

				var user:UserVO=data.author;
				userName.text=user.nickname ? user.nickname : user.username;
//				trace(user.nickname)
				avatar.source=user.portrait ? (VO.FILESERVER_HOST + user.portrait) : VO.DEFAULT_AVATAR;

				API.instance.getPaintPraised(likedCB, data._id);
			}

			private function likedCB(o:ResultVO):void
			{
				liked=o.status;
			}

			protected function like_click(event:MouseEvent):void
			{
				if (!UserVO.crtUser)
				{
					DBPopUp.addLoginPopup(function():void {
						mouseEnabled=mouseChildren=false;
						API.instance.praisePaint(data, praiseCB);
					});
					return;
				}
				mouseEnabled=mouseChildren=false;
				API.instance.praisePaint(data, praiseCB);
			}

			protected function disLike_click(event:MouseEvent):void
			{
				mouseEnabled=mouseChildren=false;
				API.instance.praisePaint(data, praiseCB);
			}

//			protected function praise_click(event:MouseEvent):void
//			{
//				praised=true;
//				API.instance.praisePaint(data, true, praiseCB);
//			}
//
//			protected function disPraise_click(event:MouseEvent):void
//			{
//				praised=false;
//				API.instance.praisePaint(data, false, praiseCB);
//			}

			private function praiseCB(o:ResultVO):void
			{
				if (o.status)
				{
					liked=!liked;
					dispatchEvent(new Event("refresh"));
				}
				else
					mouseEnabled=mouseChildren=true;
			}

			protected function avatar_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new UserItemEvent(data.author));
			}

		]]>
	</fx:Script>
	<s:Image source="@Embed('assets/discuss/userMessageBg.png')"/>

	<s:Group id="messageGroup">
		<s:Image id="avatar" left="19" top="3" width="50" height="50"
				 click="avatar_clickHandler(event)"/>
		<s:Label id="userName" left="85" top="6" color="0x60cdb5" fontSize="18"/>

		<s:Image source="@Embed('assets/discuss/opusMessage/playRecord.png')"
				 left="83" top="33"/>
		<s:Label text="{playTimes}" top="35" left="105" color="0xffffff"
				 fontSize="18"/>
		<s:Image source="@Embed('assets/discuss/opusMessage/loveRecord.png')"
				 left="149" top="33"/>
		<s:Label text="{likeTimes}" top="35" left="173" color="0xffffff"
				 fontSize="18"/>

		<!--<s:Image source="@Embed('assets/discuss/opusMessage/praiseRecord.png')"
			 left="218" top="33"/>
			 <s:Label text="{praiseTimes}" top="35" left="243" color="0xffffff"
			 fontSize="18"/>-->

		<s:Image source="@Embed('assets/discuss/opusMessage/playBtn.png')"
				 left="562" top="3" click="play_click(event)"/>

		<s:Image source="@Embed('assets/discuss/opusMessage/loveOff.png')"
				 left="617" top="3" click="like_click(event)" visible="{!liked}"/>
		<s:Image source="@Embed('assets/discuss/opusMessage/loveOn.png')"
				 left="617" top="3" click="disLike_click(event)"
				 visible="{liked}"/>

		<!--<s:Image source="@Embed('assets/discuss/opusMessage/zanOff.png')"
			 left="617" top="3" click="praise_click(event)"
			 visible="{!praised}"/>
			 <s:Image source="@Embed('assets/discuss/opusMessage/zanOn.png')"
			 left="617" top="3" click="disPraise_click(event)"
			 visible="{praised}"/>-->

	</s:Group>
</s:Group>
