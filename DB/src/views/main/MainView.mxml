<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" width="1024" height="768"
		 xmlns:views="views.*"
		 creationComplete="group1_creationCompleteHandler(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:photos="views.user.photos.*" xmlns:theme="views.theme.*"
		 xmlns:draw="views.draw.*" xmlns:user="views.user.*"
		 xmlns:gallery="views.gallery.*" xmlns:test="views.main.test.*"
		 xmlns:ns="http://flex.apache.org/experimental/ns"
		 xmlns:controls="com.pamakids.components.controls.*"
		 xmlns:components="views.components.*"
		 initialize="group1_initializeHandler(event)">

	<fx:Script>
		<![CDATA[

			import com.pamakids.services.QNService;

			import mx.events.FlexEvent;

			import components.Recommends;

			import controllers.DBPopUp;

			import events.ReplayEvent;

			import models.DataManager;
			import models.FontManager;
			import models.PasterManager;
			import models.ThemeFolderVo;
			import models.ThemeManager;
			import models.ThemeVo;
			import models.UserVO;

			import proxy.LoginProxy;

			import views.components.RecordPopup;
			import views.draw.DrawView;
			import views.gallery.GalleryViewOnline;
			import views.player.ReplayView;
			import views.theme.ThemeList;
			import views.user.UserCenterView;
			import views.user.UserLoginPopup;

			import vo.VO;

			private var themListArr:Array;


			protected function image1_clickHandler(event:MouseEvent):void
			{
				DBPopUp.addGusturePopUp(openParent);
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				popupLayer.graphics.beginFill(0, .6)
				popupLayer.graphics.drawRect(0, 0, 1024, 768);
				popupLayer.graphics.endFill();

				DBPopUp.root=popupLayer;

				DataManager.getInstance().initialize();
				FontManager.initialize();

				foldersList.addEventListener("openThemeList", onOpenList);

				themelist.addEventListener("themeClicked", playTheme);
				themelist.addEventListener("themeListClose", closeTheme);

				addEventListener(ReplayEvent.EVENT_ID, onReplay);

				initListeners();

				var recommend:Recommends=new Recommends(768, 1024);

				recommendHodler.addChild(recommend);

//				DBPopUp.addUserInfoPopup(null);

//				DBPopUp.addLoginPopup(null);

//				var rec:RecordPopup=new RecordPopup();
//				DBPopUp.addPopUp(rec);

//				addElement(login);
//				login.addEventListener("loginClose", function():void {
//					removeElement(login);
//					login=null;
//				});
			}

			private function initListeners():void
			{

			}

			protected function onOpenList(event:Event):void
			{
				var arr:Array=ThemeManager.getInstance().getThemeList();
				var dir:ThemeFolderVo=arr[foldersList.crtIndex];

				themListArr=dir.themeList;

				uiLayer.setElementIndex(themelist, uiLayer.numChildren - 1);
				themelist.visible=true;
				themelist.setData(themListArr, dir.getTitleRef());
			}

			protected function playTheme(event:Event):void
			{
				var vo:ThemeVo=themListArr[themelist.crtIndex];

				drawerLayer.removeAllElements();
				if (db)
				{
					db.dispose();
					db=null;
				}

				db=new DrawView();
				db.initData(vo);
				db.addEventListener("exitDraw", onExitDraw);
				drawerLayer.addElement(db);
//				drawerLayer.visible=true;
			}

			protected function onExitDraw(e:Event):void
			{
				if (db)
				{
					drawerLayer.removeElement(db);
					db.dispose();
//					drawerLayer.visible=false;
				}
				db=null;
			}

			private var db:DrawView;

			protected function closeTheme(event:Event):void
			{
				themelist.dispose();
				themelist.visible=false;
			}

			private function openParent():void
			{
				if (!pv)
				{
					pv=new ParentView();
					pv.addEventListener("parentsClose", function(e:Event):void {
						mainGroup.removeElement(pv);
					});
				}
				mainGroup.addElement(pv);
			}

			private var pv:ParentView;

			protected function gallery_clickHandler(event:MouseEvent):void
			{
				addGallery();
			}

			private var gallery:GalleryViewOnline;
			private var usercenter:UserCenterView;

			private var player:ReplayView;

			protected function usercenter_clickHandler(event:MouseEvent):void
			{
				addUsercenter();
			}

			private function addGallery():void
			{
				if (!gallery)
				{
					gallery=new GalleryViewOnline();
					uiLayer.addElementAt(gallery, 0);
					gallery.addEventListener("galleryClose", function(e:Event):void {
						gallery.visible=false;
					});
					gallery.addEventListener("gallerytousercenter", function(e:Event):void {
						gallery.visible=false;
						addUsercenter();
					});
				}
				gallery.visible=true;
			}

			private function addUsercenter():void
			{
				if (!usercenter)
				{
					usercenter=new UserCenterView();
					uiLayer.addElement(usercenter);
					usercenter.addEventListener("usercenterClose", function(e:Event):void {
						usercenter.visible=false;
					});
					usercenter.addEventListener("usercentertogallery", function(e:Event):void {
						addGallery();
						usercenter.visible=false;
					});
				}
				usercenter.initData(UserVO.crtUser);
				usercenter.visible=true;
			}

			protected function group1_initializeHandler(event:FlexEvent):void
			{
				LoginProxy.autoLogin();
				PasterManager.getInstance().initialize();
				ThemeManager.getInstance().initialize();
				initConfig();
			}

			private function initConfig():void
			{
				QNService.HOST=VO.FILESERVER_HOST;
			}

			protected function onReplay(e:ReplayEvent):void
			{
				onExitDraw(null);
				player=new ReplayView();
				player.initData(e.data);
				player.addEventListener("replayToCenter", onplayerToCenter);
				player.addEventListener("closeReplay", onClosePlayer);
				drawerLayer.addElement(player);
			}

			protected function onplayerToCenter(event:Event):void
			{
				addUsercenter();
				closeTheme(null);
				onClosePlayer(null);
			}

			protected function onClosePlayer(event:Event):void
			{
				if (player)
				{
					player.removeEventListener("replayToCenter", onplayerToCenter);
					player.removeEventListener("closeReplay", onClosePlayer);
					drawerLayer.removeElement(player);
					player.dispose();
				}
				player=null;
			}

		]]>
	</fx:Script>

	<!--<photos:PhotoSelector left="512" top="200"/>-->

	<s:Group width="100%" height="100%" id="mainGroup">
		<s:Image width="100%" height="100%" top="0" left="0"
				 source="@Embed('assets/homepage/img/common/homepageBg_B.png')"
				 mouseEnabled="false"/>

		<s:Image source="@Embed('assets/homepage/img/common/titleBg.png')"
				 mouseEnabled="false"/>

		<s:Image source="@Embed('assets/homepage/img/common/parents.png')"
				 left="16" top="21" click="image1_clickHandler(event)"/>

		<s:Image source="@Embed('assets/global/usercenterBtn.png')" right="42"
				 top="21" click="usercenter_clickHandler(event)"/>

		<s:Image source="@Embed('assets/homepage/img/common/title.png')"
				 top="62" left="368" mouseEnabled="false"/>

		<theme:ThemeFolderList top="188" left="219" id="foldersList"/>

		<s:Image source="@Embed('assets/homepage/btn/btn_removeTheme.png')"
				 left="330" top="633" visible="false"/>
		<s:Image source="@Embed('assets/global/galleryBtn.png')" left="512"
				 top="633" click="gallery_clickHandler(event)"/>
		<s:Image source="@Embed('assets/homepage/btn/btn_shop.png')" left="634"
				 top="633" visible="false"/>

		<mx:UIComponent id="recommendHodler"/>

	</s:Group>

	<s:Group id="uiLayer">
		<theme:ThemeList id="themelist" visible="false"/>
	</s:Group>
	<!--<user:UserCenterView id="usercenter" visible="false"/>
		 <gallery:GalleryViewOnline id="gallery" visible="false"/>-->

	<s:Group width="100%" height="100%" id="drawerLayer"/>

	<mx:UIComponent id="popupLayer" width="1024" height="768" visible="false"/>

	<test:RecordTest>
	</test:RecordTest>

</s:Group>
