<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" width="1024" height="768"
		 creationComplete="group1_creationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[

			import mx.events.FlexEvent;

			import models.ThemeVo;

			public var data:Array;

			public function setData(_data:Array, _src:String):void
			{
				dispose();
				title.source=_src;

				data=_data;
				for each (var o:ThemeVo in data)
				{
					var item:ThemeListItem=new ThemeListItem();
					item.src=o.thumbnail;
					list.addElement(item);
					item.addEventListener(MouseEvent.CLICK, onClick);
					item.index=data.indexOf(o);
				}
			}

			public var crtIndex:int;

			protected function onClick(event:MouseEvent):void
			{
				var item:ThemeListItem=event.currentTarget as ThemeListItem;
				crtIndex=item.index;
				dispatchEvent(new Event("themeClicked"));
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
//				if (!scroller.verticalScrollBar)
//					scroller.verticalScrollBar=new VScrollBar();
//				scroller.verticalScrollBar.setStyle("skinClass", MyVSBSkin);
			}

			protected function image1_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event("themeListClose"));
			}

			protected function scroller_enterFrameHandler(event:Event):void
			{
				trace(list.verticalScrollPosition);
			}

			public function dispose():void
			{
				while (list.numElements > 0)
				{
					var item:ThemeListItem=ThemeListItem(list.getElementAt(0));
					list.removeElement(item);
					item.removeEventListener(MouseEvent.CLICK, onClick);
					item.dispose();
					item=null;
				}
			}

		]]>
	</fx:Script>

	<s:Image source="@Embed('assets/data/images/publicBg.png')"
			 mouseEnabled="false"/>

	<s:Image source="@Embed('assets/gallery/img/common/back.png')" left="42"
			 top="21" click="image1_clickHandler(event)"/>

	<s:Image id="title" left="448" top="44"/>

	<s:Scroller width="983" height="600" left="30" top="147" id="scroller"
				horizontalScrollPolicy="off" verticalScrollPolicy="auto">
		<s:TileGroup id="list" requestedColumnCount="3" horizontalGap="24"
					 verticalGap="13">
		</s:TileGroup>
	</s:Scroller>
</s:Group>
