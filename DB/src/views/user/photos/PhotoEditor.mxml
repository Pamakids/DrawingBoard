<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" width="346" height="381"
		 gestureZoom="group1_gestureZoomHandler(event)">
	<fx:Script>
		<![CDATA[

			private var minScale:Number;

			private var crtW:Number;
			private var crtH:Number;

			public var comeFrom:String;

			public function initPhoto(bd:BitmapData, from:String):void
			{
				comeFrom=from;
				photo.source=bd;

				crtW=bd.width;
				crtH=bd.height;

				minScale=Math.max(photoContainer.width / crtW, photoContainer.width / crtH);

				photo.scaleX=minScale;

				photo.x=photoContainer.width - crtW * minScale >> 1;
				photo.y=photoContainer.width - crtH * minScale >> 1;
			}

			protected function photoContainer_gestureZoomHandler(event:TransformGestureEvent):void
			{
				var pscale:Number=photo.scaleX;

				photo.scaleX*=event.scaleX;

				if (photo.scaleX > 1)
					photo.scaleX=1;
				else if (photo.scaleX < minScale)
					photo.scaleX=minScale;

				var ds:Number=photo.scaleX - pscale;

				photo.x-=ds * crtW * photo.scaleX;
				photo.y-=ds * crtH * photo.scaleX;

				resizePhoto();
			}

			private function resizePhoto():void
			{
				if (photo.x > 0)
					photo.x=0;
				else if (photo.x < photoContainer.width - crtW * photo.scaleX)
					photo.x=photoContainer.width - crtW * photo.scaleX;

				if (photo.y > 0)
					photo.y=0;
				else if (photo.y < photoContainer.width - crtH * photo.scaleX)
					photo.y=photoContainer.width - crtH * photo.scaleX;
			}

			public function getBD():BitmapData
			{
				var bd:BitmapData=new BitmapData(photoContainer.width, photoContainer.height);
				bd.draw(photoContainer);
				return bd;
			}

			protected function photoContainer_mouseWheelHandler(event:MouseEvent):void
			{
				var pscale:Number=photo.scaleX;

				photo.scaleX+=event.delta / 100;

				if (photo.scaleX > 1)
					photo.scaleX=1;
				else if (photo.scaleX < minScale)
					photo.scaleX=minScale;

				var ds:Number=photo.scaleX - pscale;

				photo.x-=ds * crtW * photo.scaleX;
				photo.y-=ds * crtH * photo.scaleX;

				resizePhoto();
			}

			private var dpt:Point;

			private var startPt:Point;

			protected function photoContainer_mouseDownHandler(e:MouseEvent):void
			{
				dpt=new Point(e.stageX, e.stageY);
				startPt=new Point(photo.x, photo.y);
				stage.addEventListener(MouseEvent.MOUSE_MOVE, onMove);
				stage.addEventListener(MouseEvent.MOUSE_UP, onUp);
			}

			protected function onMove(e:MouseEvent):void
			{
				var pt:Point=new Point(e.stageX, e.stageY);
				photo.x=startPt.x + pt.x - dpt.x;
				photo.y=startPt.y + pt.y - dpt.y;

				resizePhoto();
			}

			protected function onUp(event:MouseEvent):void
			{
				stage.removeEventListener(MouseEvent.MOUSE_MOVE, onMove);
				stage.removeEventListener(MouseEvent.MOUSE_UP, onUp);

				dpt=null;
			}

			protected function backBtn_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event("return"));
			}

			protected function confirm_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event("confirm"));
			}

			public function dispose():void
			{
				// TODO Auto Generated method stub

			}

			protected function group1_gestureZoomHandler(event:TransformGestureEvent):void
			{
				var pscale:Number=photo.scaleX;

				photo.scaleX*=event.scaleX;

				if (photo.scaleX > 1)
					photo.scaleX=1;
				else if (photo.scaleX < minScale)
					photo.scaleX=minScale;

				var ds:Number=photo.scaleX - pscale;

				photo.x-=ds * crtW * photo.scaleX;
				photo.y-=ds * crtH * photo.scaleX;

				resizePhoto();
			}

		]]>
	</fx:Script>
	<s:Group id="photoContainer" clipAndEnableScrolling="true" width="266"
			 height="266" mouseDown="photoContainer_mouseDownHandler(event)"
			 horizontalCenter="0" top="74">

		<s:Image id="photo" mouseEnabled="false" scaleY="{photo.scaleX}"/>

	</s:Group>

	<s:Group id="navi" width="100%" top="22">
		<!--<s:Image left="14" top="22" source="assets/avatar/spit-line.png"
				 mouseEnabled="false"/>-->
		<!--<s:Image id="title" source="assets/avatar/pick-title.png"
				 mouseEnabled="false" horizontalCenter="0"/>-->
		<s:Image id="backBtn" source="assets/avatar/back-btn.png"
				 click="backBtn_clickHandler(event)" left="22"/>
		<s:Image id="confirm" source="assets/avatar/confirm-btn.png"
				 click="confirm_clickHandler(event)" right="22"/>
	</s:Group>

</s:Group>
